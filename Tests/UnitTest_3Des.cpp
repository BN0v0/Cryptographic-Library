#include <unity.h>
#include <des.h>

DES Des;

void Test_First_case(){
    byte key[]={
        0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,
        0x10,0x10,0x10,0x01,0x01,0x01,0x10,0x01,
        0x09,0x0a,0x0b,0x0c,0x0d,0x0e,0x0f,0xff
    };

    byte msg[] ={0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
    byte cipher[8];
    byte decipher[8];

    byte CipherExpected []= {0x15,0x8f,0x71,0x4f,0x95,0x78,0x10,0x48};

    Des.Initialize(t_des,ECB,key,nullptr);
    Des.Encryption(cipher,msg);
    int EncryResult =   memcmp(cipher,CipherExpected,8);
    TEST_ASSERT(EncryResult == 0);

    Des.Decryption(decipher,cipher);
    int DecrResult =   memcmp(decipher,msg,8);
    TEST_ASSERT(DecrResult == 0);
}


void Test_Second_case(){
    byte key[]={
        0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,
        0x10,0x10,0x10,0x01,0x01,0x01,0x10,0x01,
        0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08
    };

    byte msg[] ={0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
    byte cipher[8];
    byte decipher[8];

    byte CipherExpected []= {0x9c,0xc5,0x00,0x88,0xcf,0xb5,0xf6,0x87};

    Des.Initialize(t_des,ECB,key,nullptr);
    Des.Encryption(cipher,msg);
    int EncryResult =   memcmp(cipher,CipherExpected,8);
    TEST_ASSERT(EncryResult == 0);

    Des.Decryption(decipher,cipher);
    int DecrResult =   memcmp(decipher,msg,8);
    TEST_ASSERT(DecrResult == 0);
}


void Test_First_case_CBC(){
    byte key[]={
        0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,
        0x10,0x10,0x10,0x01,0x01,0x01,0x10,0x01,
        0x09,0x0a,0x0b,0x0c,0x0d,0x0e,0x0f,0xff
    };

    byte msg[] ={0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
    byte cipher[8];
    byte decipher[8];
    byte iv[]= { 0x0f, 0x10,0xf0,0x10,0xf0 ,0x10,0xf0,0x20};

    byte CipherExpected []= {0x13,0x12,0x6e,0x7d,0xa5,0x2d,0x8b,0xf2};
    byte msgExpected[] ={0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
    Des.Initialize(t_des,CBC,key,iv);
    Des.Encryption(cipher,msg);
    int EncryResult =   memcmp(cipher,CipherExpected,8);
    TEST_ASSERT(EncryResult == 0);

    Des.Decryption(decipher,cipher);
    int DecrResult =   memcmp(decipher,msgExpected,8);
    TEST_ASSERT(DecrResult == 0);
}


void Test_Second_case_CBC(){
    byte key[]={
        0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,
        0x10,0x10,0x10,0x01,0x01,0x01,0x10,0x01,
        0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08
    };

    byte msg[] ={0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
    byte iv[] ={0x11,0x11,0x11,0x11,0x11,0x11,0x11,0x11};
    byte cipher[8];
    byte decipher[8];
    byte msgExpected[] ={0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
    byte CipherExpected []= {0xbc,0x7a,0xf1,0xb2,0x81,0x21,0xb3,0x17};

    Des.Initialize(t_des,CBC,key,iv);
    Des.Encryption(cipher,msg);
    int EncryResult =   memcmp(cipher,CipherExpected,8);
    TEST_ASSERT(EncryResult == 0);

    Des.Decryption(decipher,cipher);
    int DecrResult =   memcmp(decipher,msgExpected,8);
    TEST_ASSERT(DecrResult == 0);
}


void setup(){

    UNITY_BEGIN();

    RUN_TEST(Test_First_case);
    RUN_TEST(Test_Second_case);

    RUN_TEST(Test_Second_case_CBC);

    UNITY_END();
}

void loop(){

}